<TemplatesExport family="Live Templates">
  <Template uid="6efda15f-9dba-4149-8f1f-eaefc1af3493" shortcut="JasonBoolTests" description="A group of Repository  tests typical for the bool fields" text="        #region $BoolFieldToTest$ Tests&#xD;&#xA;&#xD;&#xA;        /// &lt;summary&gt;&#xD;&#xA;        /// Tests the $BoolFieldToTest$ is false saves.&#xD;&#xA;        /// &lt;/summary&gt;&#xD;&#xA;        [TestMethod]&#xD;&#xA;        public void Test$BoolFieldToTest$IsFalseSaves()&#xD;&#xA;        {&#xD;&#xA;            #region Arrange&#xD;&#xA;            $Entity$ $entityVariable$ = GetValid(9);&#xD;&#xA;            $entityVariable$.$BoolFieldToTest$ = false;&#xD;&#xA;            #endregion Arrange&#xD;&#xA;&#xD;&#xA;            #region Act&#xD;&#xA;            $Entity$Repository.DbContext.BeginTransaction();&#xD;&#xA;            $Entity$Repository.EnsurePersistent($entityVariable$);&#xD;&#xA;            $Entity$Repository.DbContext.CommitTransaction();&#xD;&#xA;            #endregion Act&#xD;&#xA;&#xD;&#xA;            #region Assert&#xD;&#xA;            Assert.IsFalse($entityVariable$.$BoolFieldToTest$);&#xD;&#xA;            Assert.IsFalse($entityVariable$.IsTransient());&#xD;&#xA;            Assert.IsTrue($entityVariable$.IsValid());&#xD;&#xA;            #endregion Assert&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        /// &lt;summary&gt;&#xD;&#xA;        /// Tests the $BoolFieldToTest$ is true saves.&#xD;&#xA;        /// &lt;/summary&gt;&#xD;&#xA;        [TestMethod]&#xD;&#xA;        public void Test$BoolFieldToTest$IsTrueSaves()&#xD;&#xA;        {&#xD;&#xA;            #region Arrange&#xD;&#xA;            var $entityVariable$ = GetValid(9);&#xD;&#xA;            $entityVariable$.$BoolFieldToTest$ = true;&#xD;&#xA;            #endregion Arrange&#xD;&#xA;&#xD;&#xA;            #region Act&#xD;&#xA;            $Entity$Repository.DbContext.BeginTransaction();&#xD;&#xA;            $Entity$Repository.EnsurePersistent($entityVariable$);&#xD;&#xA;            $Entity$Repository.DbContext.CommitTransaction();&#xD;&#xA;            #endregion Act&#xD;&#xA;&#xD;&#xA;            #region Assert&#xD;&#xA;            Assert.IsTrue($entityVariable$.$BoolFieldToTest$);&#xD;&#xA;            Assert.IsFalse($entityVariable$.IsTransient());&#xD;&#xA;            Assert.IsTrue($entityVariable$.IsValid());&#xD;&#xA;            #endregion Assert&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #endregion $BoolFieldToTest$ Tests&#xD;&#xA;        /*&#xD;&#xA;            expectedFields.Add(new NameAndType(&quot;$BoolFieldToTest$&quot;, &quot;System.Boolean&quot;, new List&lt;string&gt;()));&#xD;&#xA;        */" reformat="True" shortenQualifiedReferences="True">
    <Categories />
    <Variables>
      <Variable name="Entity" expression="" initialRange="0" />
      <Variable name="BoolFieldToTest" expression="" initialRange="3" />
      <Variable name="entityVariable" expression="decapitalize(Entity)" initialRange="-1" />
    </Variables>
    <CustomProperties />
  </Template>
</TemplatesExport>